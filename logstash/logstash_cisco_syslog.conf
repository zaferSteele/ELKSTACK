# HOW TO RUN THIS CONFIG FILE:

# OR TESTING (runs in foreground and shows logs in terminal):
# logstash -f /path/to/cisco_syslog_pipeline.conf

# TO TEST FOR SYNTAX ERRORS ONLY (does NOT run the pipeline):
# logstash -f /path/to/cisco_syslog_pipeline.conf --config.test_and_exit

# FOR PRODUCTION:
# 1. Move this file to: /etc/logstash/conf.d/
# 2. Restart the Logstash service:
# sudo systemctl restart logstash
# Logstash will automatically load and run it on startup.

# INPUT SECTION: This is where we define how Logstash receives incoming logs
input {
  udp {
    # Listen for UDP traffic (common for syslog)
    port => 5144  # This is the port number Logstash will listen on (custom syslog port)
    
    # Add a type field to incoming events for easier identification and filtering later
    type => "syslog-ios"  # Label the logs as Cisco IOS syslog messages
  }
}

# OUTPUT SECTION: This is where we define where the logs should go
output {
  # Print the logs to the terminal (stdout) in JSON format
  # Useful for debugging and verifying that logs are being received and processed correctly
  stdout { codec => json }

  # Send logs to an Elasticsearch server for storage and searching
  elasticsearch {
    # Address of the Elasticsearch server (replace with actual IP or hostname)
    hosts => ["https://<elasticsearch ip>:9200"]

    # Use SSL/TLS encryption for secure communication with Elasticsearch
    ssl => true

    # Disable certificate verification (⚠️ not secure for production; only use for testing or internal networks)
    ssl_certificate_verification => false

    # Elasticsearch credentials (use secure storage for passwords in production)
    user => "elastic"
    password => "<password>"

    # Define the index name pattern in Elasticsearch
    # This creates a new index each day with a date suffix like "cisco-syslog-2025.07.09"
    index => "cisco-syslog-%{+YYYY.MM.dd}"
  }
}

